<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:webflow="http://www.springframework.org/schema/webflow-config"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
    	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/webflow-config
        http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd">
 
    <context:component-scan base-package="com.mindtree.task" />
 
 	<!-- Disable aop in Production -->
 	<aop:aspectj-autoproxy/>
 
    <mvc:annotation-driven />	
    
    <bean id="PropertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
      <property name="locations">
		<list>
			<value>WEB-INF/config/application.properties</value>
		</list>
	  </property>
    </bean>
	
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/jsp/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.JstlView</value>
		</property>
	</bean>
	
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
    	<property name="driverClassName" value="${driverClassName}" />
    	<property name="url" value="${driverURL}"/>
    	<property name="username" value="${db.username}" />
    	<property name="password" value="${db.password}" />
    	<property name="initialSize" value="2"></property>
    	<property name="maxActive" value="2"></property>
  	</bean>  -->
  	
  	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/${jndi.name}" />       
    </bean>
  	
  	 <tx:annotation-driven transaction-manager="transactionManager"/>
  	
  	<bean id="transactionManager"  class="org.springframework.orm.hibernate5.HibernateTransactionManager">
  	  <property name="sessionFactory" ref="sessionFactory"/>
	</bean>
  	
  	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
  		<property name="dataSource" ref="dataSource" />
  		<property name="hibernateProperties">
              <props>
                   <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                   <prop key="hibernate.hbm2ddl.auto">update</prop>
              </props>
         </property>
          <property name="packagesToScan" value="com.mindtree.task.model" />
  	</bean>
  	
  	<bean id="taskDAO" class="com.mindtree.task.dao.TaskDAOImpl"/>
  	
  	<bean id="taskService" class="com.mindtree.task.service.TaskServiceImpl" />
  	
  	<bean id="userService" class="com.mindtree.task.service.UserService" />
  	
  	<bean id="taskUtil" class="com.mindtree.task.util.TaskUtil"/>
  		
  	
  	<!-- i18n Internationalization -->  	
  <!--   <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
  			<list>  				
  				<value>/WEB-INF/config/messages</value>
  				<value>WEB-INF/config/application</value>  				
  			</list>
  		</property> 
		<property name="defaultEncoding" value="UTF-8" />
	</bean> -->
	
	<bean id="propertiesMessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
       <property name="basenames">
  			<list>  				
  				<value>WEB-INF/config/messages</value>
  				<value>WEB-INF/config/application</value>  				
  			</list>
  		</property> 
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="0"/>
       <!--  <property name="fallbackToSystemLocale" value="false"/> -->
    </bean>

    <bean id="messageSource" class="com.mindtree.task.i18n.DatabaseMessageSource">
        <constructor-arg ref="i18nService"/>
        <property name="parentMessageSource" ref="propertiesMessageSource"/>
    </bean>
	
	 <bean id="i18nService" class="com.mindtree.task.service.I18nServiceImpl" />
  	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="en" />
	</bean>
	
	<bean id="localeChangeInterceptor"	class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<property name="paramName" value="language" />
	</bean>

	<bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping" >
		<property name="interceptors">
		   <list>
				<ref bean="localeChangeInterceptor" />
		    </list>
		</property>
	</bean>	
	
	<bean id="filterMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="50000000" /> <!-- 5 MB -->
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="resolveLazily" value="true"/>
	</bean>
	
	<!-- Tiles -->
	<bean id="tilesConfigurer"
    class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
    <property name="definitions">
        <list>
            <value>/WEB-INF/tiles.xml</value>
        </list>
    </property>
	</bean>
	<bean id="tilesViewResolver"
	    class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	    <property name="viewClass">
	        <value>
	            org.springframework.web.servlet.view.tiles3.TilesView
	        </value>
	    </property>
	    <property name="order" value="0"/>
	</bean>
	
	
	<!--  Webflow Configuration -->
	<!-- Maps flow requests from DispatcherServlet to flowController -->
	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<value>/welcome-flow.do=flowController</value>
		</property>
		<property name="alwaysUseFullPath" value="true"/>
	</bean>

	<!-- Using FlowController instead of FlowHandlers -->
	<bean id="flowController" class="org.springframework.webflow.mvc.servlet.FlowController">
		<property name="flowExecutor" ref="flowExecutor"/>
	</bean>
    
	<webflow:flow-executor id="flowExecutor" flow-registry="flowRegistry"/>
	
	<!-- This creates an XmlFlowRegistryFactory bean -->
	<webflow:flow-registry id="flowRegistry" flow-builder-services="flowBuilderServices">
		<webflow:flow-location path="/WEB-INF/webflow/welcome-flow.xml"/>		
	</webflow:flow-registry>
	
	<webflow:flow-builder-services id="flowBuilderServices" view-factory-creator="viewFactoryCreator"/>
	
	<bean id="viewFactoryCreator" class="org.springframework.webflow.mvc.builder.MvcViewFactoryCreator">
		<property name="viewResolvers">
			<list>
				<ref bean="tilesViewResolver"/>
			</list>
		</property>
	</bean>
        
	
</beans>